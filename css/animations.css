:root {
    /* 量子过渡动画 */
    --transition-fast: 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-normal: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-slow: 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    
    /* 动画缓动函数 */
    --ease-bounce: cubic-bezier(0.34, 1.56, 0.64, 1);
    --ease-smooth: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    --ease-fast: cubic-bezier(0.4, 0, 0.2, 1);
    --ease-elastic: cubic-bezier(0.68, -0.55, 0.265, 1.55);
    
    /* 动画持续时间 */
    --duration-fast: 0.15s;
    --duration-normal: 0.25s;
    --duration-slow: 0.4s;
    --duration-hover: 0.6s;
    --duration-long: 1.2s;
    
    /* 性能优化变量 */
    --gpu-accelerated: translate3d(0, 0, 0);
    --will-change-transform: will-change: transform;
    --will-change-opacity: will-change: opacity;
    --backface-hidden: backface-visibility: hidden;
    --perspective: perspective: 1000px;
    
    /* 动画性能优化 */
    --animation-performance: 
        will-change: transform, opacity;
        transform: translate3d(0, 0, 0);
        backface-visibility: hidden;
        perspective: 1000px;
}

/* ========== 减少动画支持 ========== */
@media (prefers-reduced-motion: reduce) {
    :root {
        --transition-fast: 0.01s;
        --transition-normal: 0.01s;
        --transition-slow: 0.01s;
        --duration-fast: 0.01s;
        --duration-normal: 0.01s;
        --duration-slow: 0.01s;
        --duration-hover: 0.01s;
        --duration-long: 0.01s;
    }
}

/**
 * 动画效果样式
 * 包含各种动画关键帧和过渡效果
 */

/* 基础量子动画定义 */
@keyframes quantumParticles {
    0% {
        background-position: 0% 50%;
        opacity: 0.2;
    }
    50% {
        background-position: 100% 50%;
        opacity: 0.6;
    }
    100% {
        background-position: 0% 50%;
        opacity: 0.2;
    }
}

@keyframes quantumFlow {
    0% {
        background-position: 0% 50%;
        filter: hue-rotate(0deg);
    }
    50% {
        background-position: 100% 50%;
        filter: hue-rotate(180deg);
    }
    100% {
        background-position: 0% 50%;
        filter: hue-rotate(360deg);
    }
}

@keyframes quantumGlow {
    0%, 100% {
        box-shadow: 0 0 20px rgba(6, 182, 212, 0.3);
    }
    50% {
        box-shadow: 0 0 40px rgba(6, 182, 212, 0.6);
    }
}

@keyframes quantumPulse {
    0%, 100% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(1.02);
        opacity: 0.9;
    }
}

/* Logo动画 */
@keyframes logoGlow {
    0%, 100% {
        transform: scale(1);
        opacity: 0.1;
    }
    50% {
        transform: scale(1.2);
        opacity: 0.2;
    }
}

/* 通用动画效果 */
@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@keyframes bounce {
    0%, 20%, 53%, 80%, 100% {
        transform: translate3d(0, 0, 0);
    }
    40%, 43% {
        transform: translate3d(0, -8px, 0);
    }
    70% {
        transform: translate3d(0, -4px, 0);
    }
    90% {
        transform: translate3d(0, -2px, 0);
    }
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideInRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideOutRight {
    from {
        transform: translateX(0);
        opacity: 1;
    }
    to {
        transform: translateX(100%);
        opacity: 0;
    }
}

@keyframes slideUp {
    from { transform: translateY(100%); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

@keyframes slideDown {
    from { transform: translateY(-100%); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

@keyframes slideLeft {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
}

@keyframes slideRight {
    from { transform: translateX(-100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
}

@keyframes scaleIn {
    from { transform: scale(0); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
}

@keyframes scaleOut {
    from { transform: scale(1); opacity: 1; }
    to { transform: scale(0); opacity: 0; }
}

@keyframes gradientShift {
    0%, 100% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
}

@keyframes smoothRotate {
    0%, 100% {
        transform: rotate(0deg) translate3d(0, 0, 0);
    }
    25% {
        transform: rotate(5deg);
    }
    75% {
        transform: rotate(-5deg);
    }
}

@keyframes float {
    0%, 100% {
        transform: translateY(0px) translate3d(0, 0, 0);
    }
    50% {
        transform: translateY(-10px) translate3d(0, 0, 0);
    }
}

@keyframes elasticScale {
    0% {
        transform: scale(1) translate3d(0, 0, 0);
    }
    50% {
        transform: scale(1.1) translate3d(0, 0, 0);
    }
    100% {
        transform: scale(1) translate3d(0, 0, 0);
    }
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
}

@keyframes glow {
    0%, 100% { box-shadow: 0 0 5px currentColor; }
    50% { box-shadow: 0 0 20px currentColor; }
}

/* 光晕和发光效果 */
@keyframes glowPulse {
    0% {
        transform: scale(1);
        opacity: 0.6;
    }
    50% {
        transform: scale(1.2);
        opacity: 0.3;
    }
    100% {
        transform: scale(1.5);
        opacity: 0;
    }
}

@keyframes glowEffect {
    0% {
        box-shadow: 0 0 5px currentColor;
        opacity: 0.5;
    }
    50% {
        box-shadow: 0 0 20px currentColor, 0 0 30px currentColor;
        opacity: 1;
    }
    100% {
        box-shadow: 0 0 5px currentColor;
        opacity: 0.5;
    }
}

@keyframes sparkle {
    0%, 100% {
        opacity: 0;
        transform: scale(0) rotate(0deg);
    }
    50% {
        opacity: 1;
        transform: scale(1) rotate(180deg);
    }
}

@keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

@keyframes soundWave {
    0% {
        transform: scale(0.5);
        opacity: 0.8;
    }
    100% {
        transform: scale(2);
        opacity: 0;
    }
}

@keyframes particleTrail {
    0% {
        transform: scale(0) translateX(0) translateY(0) translate3d(0, 0, 0);
        opacity: 0;
    }
    20% {
        opacity: 1;
    }
    80% {
        opacity: 0.8;
    }
    100% {
        transform: scale(1.5) translateX(var(--x, 0)) translateY(var(--y, 0)) translate3d(0, 0, 0);
        opacity: 0;
    }
}

/* 动画工具类 */
.animate-fadeIn {
    animation: fadeIn 0.3s ease-out;
}

.animate-fadeOut {
    animation: fadeOut 0.3s ease-in;
}

.animate-slideUp {
    animation: slideUp 0.3s ease-out;
}

.animate-slideDown {
    animation: slideDown 0.3s ease-out;
}

.animate-slideLeft {
    animation: slideLeft 0.3s ease-out;
}

.animate-slideRight {
    animation: slideRight 0.3s ease-out;
}

.animate-scaleIn {
    animation: scaleIn 0.3s ease-out;
}

.animate-scaleOut {
    animation: scaleOut 0.3s ease-in;
}

.animate-bounce {
    animation: bounce 0.6s ease-out;
}

.animate-shake {
    animation: shake 0.5s ease-in-out;
}

.animate-glow {
    animation: glow 1s ease-in-out infinite alternate;
}

/* 过渡效果 */
.transition-all {
    transition: all 0.3s ease;
}

.transition-colors {
    transition: color 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;
}

.transition-opacity {
    transition: opacity 0.3s ease;
}

.transition-transform {
    transition: transform 0.3s ease;
}

.transition-fast {
    transition-duration: 0.15s;
}

.transition-slow {
    transition-duration: 0.5s;
}

/* 动画延迟 */
.delay-100 { animation-delay: 100ms; }
.delay-200 { animation-delay: 200ms; }
.delay-300 { animation-delay: 300ms; }
.delay-500 { animation-delay: 500ms; }
.delay-700 { animation-delay: 700ms; }
.delay-1000 { animation-delay: 1000ms; }

/* 动画持续时间 */
.duration-75 { animation-duration: 75ms; }
.duration-100 { animation-duration: 100ms; }
.duration-150 { animation-duration: 150ms; }
.duration-200 { animation-duration: 200ms; }
.duration-300 { animation-duration: 300ms; }
.duration-500 { animation-duration: 500ms; }
.duration-700 { animation-duration: 700ms; }
.duration-1000 { animation-duration: 1000ms; }

/* 动画时间函数 */
.ease-linear { animation-timing-function: linear; }
.ease-in { animation-timing-function: ease-in; }
.ease-out { animation-timing-function: ease-out; }
.ease-in-out { animation-timing-function: ease-in-out; }

/* 动画重复次数 */
.animate-infinite { animation-iteration-count: infinite; }
.animate-once { animation-iteration-count: 1; }
.animate-twice { animation-iteration-count: 2; }

/* 动画方向 */
.animate-reverse { animation-direction: reverse; }
.animate-alternate { animation-direction: alternate; }

/* 动画填充模式 */
.animate-fill-both { animation-fill-mode: both; }
.animate-fill-forwards { animation-fill-mode: forwards; }
.animate-fill-backwards { animation-fill-mode: backwards; }

/* 悬停效果 */
.hover-lift {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.hover-lift:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.hover-scale {
    transition: transform 0.3s ease;
}

.hover-scale:hover {
    transform: scale(1.05);
}

.hover-rotate {
    transition: transform 0.3s ease;
}

.hover-rotate:hover {
    transform: rotate(5deg);
}

/* Vue过渡动画 */
.fade-enter-active, .fade-leave-active {
    transition: opacity 0.3s ease;
}

.fade-enter-from, .fade-leave-to {
    opacity: 0;
}

.slide-enter-active, .slide-leave-active {
    transition: all 0.3s ease;
}

.slide-enter-from {
    opacity: 0;
    transform: translateY(20px);
}

.slide-leave-to {
    opacity: 0;
    transform: translateY(-20px);
}

/* 欢迎页面特定动画 */
@keyframes dataPointFloat {
    0% {
        transform: scale(0.3) translateY(0);
        opacity: 0.8;
    }
    60% {
        transform: scale(1.0) translateY(-15px);
        opacity: 1;
    }
    100% {
        transform: scale(0.6) translateY(-30px);
        opacity: 0;
    }
}

@keyframes codeLineScan {
    0% {
        transform: translateX(-80%) scaleX(0.7);
        opacity: 0.2;
    }
    40% {
        opacity: 1;
    }
    80% {
        transform: translateX(60%) scaleX(1.1);
        opacity: 0.7;
    }
    100% {
        transform: translateX(100%) scaleX(0.8);
        opacity: 0;
    }
}

@keyframes colorParticleExplode {
    0% {
        transform: scale(0.5) translateX(0) translateY(0);
        opacity: 0.7;
    }
    60% {
        transform: scale(1.1) translateX(var(--x, 0)) translateY(var(--y, 0));
        opacity: 1;
    }
    100% {
        transform: scale(0.6) translateX(calc(var(--x, 0) * 1.5)) translateY(calc(var(--y, 0) * 1.5));
        opacity: 0;
    }
}

@keyframes dataFlowAnimation {
    0% {
        transform: scale(0.4) translateX(0) translateY(0) rotate(0deg);
        opacity: 0.6;
    }
    30% {
        transform: scale(0.8) translateX(var(--x, 0)) translateY(var(--y, 0)) rotate(45deg);
        opacity: 1;
    }
    70% {
        transform: scale(1.2) translateX(calc(var(--x, 0) * 1.2)) translateY(calc(var(--y, 0) * 1.2)) rotate(90deg);
        opacity: 0.8;
    }
    100% {
        transform: scale(0.5) translateX(calc(var(--x, 0) * 1.8)) translateY(calc(var(--y, 0) * 1.8)) rotate(135deg);
        opacity: 0;
    }
}

@keyframes codeBlockAnimation {
    0% {
        transform: scale(0.3) translateX(0) translateY(0) rotate(0deg);
        opacity: 0.5;
    }
    25% {
        transform: scale(0.7) translateX(var(--x, 0)) translateY(var(--y, 0)) rotate(15deg);
        opacity: 1;
    }
    50% {
        transform: scale(1.0) translateX(calc(var(--x, 0) * 1.1)) translateY(calc(var(--y, 0) * 1.1)) rotate(30deg);
        opacity: 0.9;
    }
    75% {
        transform: scale(0.8) translateX(calc(var(--x, 0) * 1.4)) translateY(calc(var(--y, 0) * 1.4)) rotate(45deg);
        opacity: 0.6;
    }
    100% {
        transform: scale(0.4) translateX(calc(var(--x, 0) * 1.6)) translateY(calc(var(--y, 0) * 1.6)) rotate(60deg);
        opacity: 0;
    }
}

@keyframes dataConnection {
    0% {
        transform: scaleX(0);
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    100% {
        transform: scaleX(1);
        opacity: 0;
    }
}

@keyframes codeCharacterFloat {
    0% {
        transform: translateY(0) rotate(0deg) scale(1);
        opacity: 0.8;
    }
    50% {
        transform: translateY(-20px) rotate(180deg) scale(1.2);
        opacity: 1;
    }
    100% {
        transform: translateY(-40px) rotate(360deg) scale(0.8);
        opacity: 0;
    }
}

@keyframes artisticParticleSpin {
    0% {
        transform: scale(0.3) translateX(0) translateY(0) rotate(0deg);
        opacity: 0.6;
    }
    25% {
        transform: scale(0.8) translateX(var(--x, 0)) translateY(var(--y, 0)) rotate(90deg);
        opacity: 1;
    }
    50% {
        transform: scale(1.1) translateX(calc(var(--x, 0) * 1.3)) translateY(calc(var(--y, 0) * 1.3)) rotate(180deg);
        opacity: 0.9;
    }
    75% {
        transform: scale(0.9) translateX(calc(var(--x, 0) * 1.6)) translateY(calc(var(--y, 0) * 1.6)) rotate(270deg);
        opacity: 0.5;
    }
    100% {
        transform: scale(0.4) translateX(calc(var(--x, 0) * 2)) translateY(calc(var(--y, 0) * 2)) rotate(360deg);
        opacity: 0;
    }
}

@keyframes energyBurst {
    0% {
        transform: scale(0) rotate(0deg);
        opacity: 1;
    }
    30% {
        transform: scale(1.5) rotate(120deg);
        opacity: 0.8;
    }
    60% {
        transform: scale(2.2) rotate(240deg);
        opacity: 0.4;
    }
    100% {
        transform: scale(3) rotate(360deg);
        opacity: 0;
    }
}

/* 快捷键模块特定动画 */
@keyframes smoothRotate {
    0%, 100% {
        transform: rotate(0deg) translate3d(0, 0, 0);
    }
    25% {
        transform: rotate(5deg);
    }
    75% {
        transform: rotate(-5deg);
    }
}

/* 新闻模块特定动画 */
@keyframes tagStatisticsFadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes tagItemSlideIn {
    from {
        opacity: 0;
        transform: translateY(10px) scale(0.95);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

@keyframes clickEffect {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.98);
    }
}


/* 无障碍优化 - 减少动画选项 */
@media (prefers-reduced-motion: reduce) {
    body *,
    body *::before,
    body *::after {
        animation-duration: 0.01ms;
        animation-iteration-count: 1;
        transition-duration: 0.01ms;
    }
}

