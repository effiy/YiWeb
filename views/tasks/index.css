@import url('/css/index.css');

/* 主容器布局 */
.container {
    min-height: 100vh;
    min-height: calc(var(--vh, 1vh) * 100);
    display: grid;
    grid-template-columns: 1fr auto;
    grid-template-areas: 
        "tasks detail";
    gap: var(--spacing-xl);
    position: relative;
    width: 100%;
    max-width: 100%;
}

/* 任务列表区域 */
.tasks-container {
    grid-area: tasks;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
    padding: var(--spacing-lg) var(--spacing-lg) var(--spacing-xl) var(--spacing-lg);
    overflow-y: auto;
    max-height: calc(100vh - 5rem);
}

/* 任务详情区域 */
.task-detail-container {
    grid-area: detail;
    position: sticky;
    top: calc(5rem + var(--spacing-md));
    align-self: flex-start;
    z-index: 10;
    width: 400px;
    min-width: 400px;
    transition: all var(--transition-normal);
    margin-top: 0;
    background: var(--bg-secondary);
    border-radius: var(--radius-lg);
    border: 1px solid var(--border-primary);
    box-shadow: var(--shadow-lg);
    overflow: hidden;
}

.task-detail-container.collapsed {
    width: 60px;
    min-width: 60px;
}

/* 任务卡片样式 */
.task-card {
    background: var(--bg-primary);
    border: 1px solid var(--border-primary);
    border-radius: var(--radius-lg);
    padding: var(--spacing-lg);
    margin-bottom: var(--spacing-md);
    transition: all var(--transition-fast);
    cursor: pointer;
    position: relative;
    overflow: hidden;
}

.task-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
    border-color: var(--primary);
}

.task-card:active {
    transform: scale(0.98);
}

.task-card.clicked {
    border-color: var(--primary);
    background: var(--bg-highlight);
}

/* 任务标题 */
.task-title {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-bold);
    color: var(--text-primary);
    margin-bottom: var(--spacing-sm);
    line-height: 1.4;
}



/* 任务步骤预览 */
.task-steps-preview {
    margin-bottom: var(--spacing-md);
}

.task-steps-preview h4 {
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--text-secondary);
    margin-bottom: var(--spacing-xs);
}

.step-item {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-xs);
    margin-bottom: var(--spacing-xs);
    font-size: var(--font-size-sm);
    color: var(--text-secondary);
    line-height: 1.4;
}

.step-item .step-number {
    background: var(--accent);
    color: var(--text-on-accent);
    width: 20px;
    height: 20px;
    border-radius: var(--radius-full);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    font-weight: var(--font-weight-bold);
    flex-shrink: 0;
    margin-top: 2px;
}

/* 任务输入输出 */
.task-input-output {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    margin-top: var(--spacing-md);
    padding-top: var(--spacing-md);
    border-top: 1px solid var(--border-secondary);
}

.task-input, .task-output {
    background: var(--bg-secondary);
    padding: var(--spacing-sm);
    border-radius: var(--radius-sm);
    border: 1px solid var(--border-secondary);
}

.task-input h5, .task-output h5 {
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--text-secondary);
    margin-bottom: var(--spacing-xs);
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
}

.task-input h5 i {
    color: var(--info);
}

.task-output h5 i {
    color: var(--success);
}

.task-input p, .task-output p {
    font-size: var(--font-size-sm);
    color: var(--text-primary);
    line-height: 1.4;
    margin: 0;
}

/* 任务详情样式 */
.task-detail-content {
    padding: var(--spacing-lg);
    max-height: calc(100vh - 8rem);
    overflow-y: auto;
}

.task-detail-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: var(--spacing-lg);
    padding-bottom: var(--spacing-md);
    border-bottom: 1px solid var(--border-secondary);
}

.task-detail-title {
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-bold);
    color: var(--text-primary);
    line-height: 1.3;
    margin: 0;
}

.close-detail-btn {
    background: none;
    border: none;
    color: var(--text-secondary);
    cursor: pointer;
    padding: var(--spacing-xs);
    border-radius: var(--radius-sm);
    transition: all var(--transition-fast);
    display: flex;
    align-items: center;
    justify-content: center;
}

.close-detail-btn:hover {
    background: var(--bg-secondary);
    color: var(--text-primary);
}

.task-detail-time {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    margin-bottom: var(--spacing-lg);
    padding: var(--spacing-sm);
    background: var(--bg-secondary);
    border-radius: var(--radius-sm);
    border: 1px solid var(--border-secondary);
}

.task-detail-time i {
    color: var(--accent);
    font-size: var(--font-size-lg);
}

.task-detail-time span {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--text-primary);
}

/* 任务步骤详情 */
.task-steps-detail {
    margin-bottom: var(--spacing-lg);
}

.task-steps-detail h4 {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--text-primary);
    margin-bottom: var(--spacing-md);
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
}

.task-steps-detail h4 i {
    color: var(--accent);
}

.step-detail-item {
    background: var(--bg-primary);
    border: 1px solid var(--border-secondary);
    border-radius: var(--radius-md);
    padding: var(--spacing-md);
    margin-bottom: var(--spacing-sm);
    transition: all var(--transition-fast);
}

.step-detail-item:hover {
    border-color: var(--accent);
    box-shadow: var(--shadow-sm);
}

.step-detail-header {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    margin-bottom: var(--spacing-sm);
}

.step-detail-number {
    background: var(--accent);
    color: var(--text-on-accent);
    width: 24px;
    height: 24px;
    border-radius: var(--radius-full);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
    font-weight: var(--font-weight-bold);
    flex-shrink: 0;
}

.step-detail-text {
    font-size: var(--font-size-base);
    color: var(--text-primary);
    line-height: 1.5;
    margin: 0;
}

/* 响应式设计 */
@media (max-width: 1200px) {
    .container {
        grid-template-columns: 1fr;
        grid-template-areas: 
            "tasks";
    }
    
    .task-detail-container {
        position: fixed;
        top: 0;
        right: 0;
        width: 100%;
        height: 100vh;
        z-index: 1000;
        transform: translateX(100%);
        transition: transform var(--transition-normal);
    }
    
    .task-detail-container.visible {
        transform: translateX(0);
    }
}

@media (max-width: 768px) {
    .tasks-container {
        padding: var(--spacing-md);
    }
    
    .task-card {
        padding: var(--spacing-md);
    }
    
    .task-title {
        font-size: var(--font-size-base);
    }
    
    .task-input-output {
        gap: var(--spacing-sm);
    }
    
    .task-detail-content {
        padding: var(--spacing-md);
    }
    
    .task-detail-title {
        font-size: var(--font-size-lg);
    }
}

/* 空状态样式 */
.empty-state {
    text-align: center;
    padding: var(--spacing-xxl);
    color: var(--text-secondary);
}

.empty-state i {
    font-size: 4rem;
    margin-bottom: var(--spacing-lg);
    color: var(--border-secondary);
}

.empty-state h3 {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    margin-bottom: var(--spacing-sm);
    color: var(--text-primary);
}

.empty-state p {
    font-size: var(--font-size-base);
    line-height: 1.5;
    margin: 0;
}

/* 加载状态样式 */
.loading-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: var(--spacing-xxl);
    color: var(--text-secondary);
}

.loading-state i {
    font-size: 2rem;
    margin-bottom: var(--spacing-md);
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.loading-state p {
    font-size: var(--font-size-base);
    margin: 0;
} 

