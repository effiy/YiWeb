/* 任务列表组件样式 */

/* 任务网格布局 */
.task-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
    gap: var(--spacing-xl);
    margin-bottom: var(--spacing-2xl);
    width: 100%;
    padding: var(--spacing-sm);
}

/* 任务列表主容器 */
.task-list-container {
    margin-top: var(--spacing-md);
    margin-bottom: var(--spacing-xl);
    background: var(--bg-elevated);
    border: 1px solid var(--border-glass);
    border-radius: var(--radius-lg);
    -webkit-backdrop-filter: blur(20px);
    backdrop-filter: blur(20px);
    box-shadow: var(--shadow-md);
    overflow: hidden;
    transition: all var(--transition-normal);
    position: relative;
    animation: taskListFadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.task-list-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: var(--primary-gradient);
    opacity: 0.6;
}

.task-list-container:hover {
    box-shadow: var(--shadow-lg);
    border-color: var(--border-secondary);
    transform: translateY(-2px);
}

/* 任务列表内容区域 */
.task-list-content {
    padding: var(--spacing-lg);
    flex: 1;
    overflow-y: auto;
    background: linear-gradient(180deg, 
        rgba(255, 255, 255, 0.03) 0%, 
        transparent 30%,
        rgba(255, 255, 255, 0.01) 100%);
    scroll-behavior: smooth;
}

.task-list-content::-webkit-scrollbar {
    width: 6px;
}

.task-list-content::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius-full);
    margin: 4px 0;
}

.task-list-content::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, 
        rgba(255, 255, 255, 0.3) 0%, 
        rgba(255, 255, 255, 0.2) 100%);
    border-radius: var(--radius-full);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.task-list-content::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(180deg, 
        rgba(255, 255, 255, 0.4) 0%, 
        rgba(255, 255, 255, 0.3) 100%);
}

/* 任务加载状态 */
.task-loading-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-lg);
    padding: var(--spacing-2xl);
    text-align: center;
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
    opacity: 0.9;
    position: relative;
    transition: all var(--transition-normal);
    animation: taskLoadingStateFadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    min-height: 200px;
    justify-content: center;
}

.task-loading-state i {
    font-size: var(--font-size-2xl);
    color: var(--primary);
    transition: all var(--transition-normal);
    animation: taskLoadingSpin 1.2s linear infinite;
    position: relative;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

.task-loading-state span {
    transition: color var(--transition-normal);
    font-weight: var(--font-weight-medium);
}

/* 任务错误状态 */
.task-error-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-lg);
    padding: var(--spacing-2xl);
    text-align: center;
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
    opacity: 0.9;
    position: relative;
    transition: all var(--transition-normal);
    animation: taskErrorStateFadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    min-height: 200px;
    justify-content: center;
}

.task-error-state i {
    font-size: var(--font-size-2xl);
    color: var(--error);
    transition: all var(--transition-normal);
    position: relative;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

.task-error-state span {
    transition: color var(--transition-normal);
    font-weight: var(--font-weight-medium);
}

.task-error-state p {
    color: var(--text-muted);
    font-size: var(--font-size-xs);
    margin: 0;
    max-width: 300px;
    line-height: 1.5;
}

.task-retry-btn {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-sm);
    padding: var(--spacing-sm) var(--spacing-md);
    background: var(--primary-gradient);
    color: white;
    border: none;
    border-radius: var(--radius-md);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    cursor: pointer;
    transition: all var(--transition-normal);
    box-shadow: var(--shadow-sm);
    position: relative;
    overflow: hidden;
}

.task-retry-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
        transparent 0%, 
        rgba(255, 255, 255, 0.2) 50%, 
        transparent 100%);
    transition: left 0.6s ease;
}

.task-retry-btn:hover {
    background: var(--primary-hover-gradient);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

.task-retry-btn:hover::before {
    left: 100%;
}

.task-retry-btn:active {
    transform: translateY(0);
}

/* 任务空状态 */
.task-empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-lg);
    padding: var(--spacing-2xl);
    text-align: center;
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
    opacity: 0.9;
    position: relative;
    transition: all var(--transition-normal);
    animation: taskEmptyStateFadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    min-height: 200px;
    justify-content: center;
}

.task-empty-state::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, 
        rgba(255, 255, 255, 0.03) 0%, 
        transparent 30%, 
        rgba(255, 255, 255, 0.02) 70%,
        transparent 100%);
    opacity: 0;
    transition: opacity var(--transition-normal);
    pointer-events: none;
    border-radius: inherit;
}

.task-empty-state:hover {
    opacity: 1;
    color: var(--text-muted);
}

.task-empty-state:hover::before {
    opacity: 1;
}

.task-empty-state i {
    font-size: var(--font-size-2xl);
    color: var(--text-secondary);
    transition: all var(--transition-normal);
    animation: taskEmptyIconFloat 4s ease-in-out infinite;
    position: relative;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

.task-empty-state:hover i {
    color: var(--text-accent);
    transform: scale(1.1) rotate(5deg);
}

.task-empty-state span {
    transition: color var(--transition-normal);
    font-weight: var(--font-weight-medium);
}

.task-empty-state:hover span {
    color: var(--text-muted);
}

/* 任务列表 */
.task-list {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    padding: var(--spacing-sm);
    border-radius: var(--radius-lg);
    background: rgba(255, 255, 255, 0.02);
    min-height: 100px;
}

/* 任务卡片 */
.task-item {
    background: var(--bg-elevated);
    border: 1px solid var(--border-glass);
    border-radius: var(--radius-xl);
    padding: var(--spacing-xl);
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    animation: taskItemSlideIn 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
}

.task-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, 
        var(--primary) 0%, 
        var(--accent) 50%, 
        var(--primary) 100%);
    transform: scaleX(0);
    transition: transform 0.3s ease;
    border-radius: var(--radius-xl) var(--radius-xl) 0 0;
}

.task-item:hover {
    transform: translateY(-8px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
    border-color: var(--border-secondary);
}

.task-item:hover::before {
    transform: scaleX(1);
}

.task-item.clicked {
    animation: clickEffect 0.3s ease;
}

.task-item.active {
    border-color: var(--border-focus);
    box-shadow: var(--shadow-glow);
}

/* 选中状态的任务卡片 */
.task-item.selected {
    border-color: var(--primary);
    background: var(--bg-highlight);
    box-shadow: var(--shadow-glow);
    position: relative;
}

.task-item.selected::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, 
        var(--primary) 0%, 
        var(--primary-hover) 50%, 
        var(--primary) 100%);
    border-radius: var(--radius-md) var(--radius-md) 0 0;
}

.task-item.selected:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
}

/* 任务头部信息 */
.task-header {
    margin-bottom: var(--spacing-md);
}

/* 输入输出信息样式 */
.task-io-section {
    margin-bottom: var(--spacing-md);
    border-top: 1px solid var(--border-tertiary);
    padding-top: var(--spacing-md);
}

.task-input,
.task-output {
    margin-bottom: var(--spacing-sm);
}

.task-input:last-child,
.task-output:last-child {
    margin-bottom: 0;
}

.io-label {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    margin-bottom: var(--spacing-xs);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
    color: var(--text-tertiary);
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.io-label i {
    font-size: 10px;
    width: 12px;
    text-align: center;
}

.io-content {
    font-size: var(--font-size-sm);
    color: var(--text-secondary);
    line-height: var(--line-height-relaxed);
    padding: var(--spacing-xs) var(--spacing-sm);
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid var(--border-tertiary);
    border-radius: var(--radius-sm);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
}

/* 步骤信息样式 */
.task-steps-section {
    margin-bottom: var(--spacing-md);
    border-top: 1px solid var(--border-tertiary);
    padding-top: var(--spacing-md);
}

.steps-label {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    margin-bottom: var(--spacing-sm);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
    color: var(--text-tertiary);
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.steps-label i {
    font-size: 10px;
    width: 12px;
    text-align: center;
}

.steps-progress {
    margin-left: auto;
    font-size: 10px;
    color: var(--text-muted);
    background: rgba(255, 255, 255, 0.05);
    padding: 2px 6px;
    border-radius: var(--radius-sm);
    border: 1px solid var(--border-tertiary);
}

.steps-content {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
}

.step-item {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-sm);
    padding: var(--spacing-xs) var(--spacing-sm);
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid var(--border-tertiary);
    border-radius: var(--radius-sm);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    transition: all 0.2s ease;
}

.step-item:hover {
    background: rgba(255, 255, 255, 0.04);
    border-color: var(--border-secondary);
}

/* 步骤复选框样式 */
.step-checkbox {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    cursor: pointer;
    border-radius: 50%;
    transition: all 0.2s ease;
    flex-shrink: 0;
}

.step-checkbox:hover {
    background: rgba(255, 255, 255, 0.1);
}

.step-check-icon {
    font-size: 14px;
    color: var(--text-tertiary);
    transition: all 0.2s ease;
}

.step-check-icon.fa-check-circle {
    color: var(--success);
}

.step-check-icon.fa-circle {
    color: var(--text-tertiary);
}

.step-checkbox:hover .step-check-icon.fa-circle {
    color: var(--primary);
}

.step-number {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 20px;
    height: 20px;
    background: var(--primary);
    color: white;
    font-size: 10px;
    font-weight: var(--font-weight-bold);
    border-radius: 50%;
    flex-shrink: 0;
    transition: all 0.2s ease;
}

.step-number.completed {
    background: var(--success);
    transform: scale(0.9);
}

.step-text {
    font-size: var(--font-size-sm);
    color: var(--text-secondary);
    line-height: var(--line-height-relaxed);
    flex: 1;
    transition: all 0.2s ease;
}

.step-text.completed {
    color: var(--text-muted);
    text-decoration: line-through;
    opacity: 0.7;
}

.task-header-content {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    width: 100%;
}

.task-header-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-shrink: 0;
    width: 100%;
}



.task-title {
    font-size: 1.3rem;
    font-weight: 700;
    color: var(--text-primary);
    line-height: 1.5;
    margin: 0 0 var(--spacing-md) 0;
    width: 100%;
    transition: all 0.3s ease;
    word-break: break-word;
    letter-spacing: -0.02em;
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: var(--spacing-md);
}

.task-title-text {
    flex: 1;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    transition: all 0.3s ease;
}

.task-item:hover .task-title-text {
    color: var(--primary);
    transform: translateX(4px);
}

/* 任务状态指示器 */
.task-status-indicator {
    flex-shrink: 0;
    opacity: 0.8;
    transition: all 0.3s ease;
}

.task-item:hover .task-status-indicator {
    opacity: 1;
    transform: scale(1.1);
}

.status-ring {
    position: relative;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.status-circle {
    width: 100%;
    height: 100%;
    transform: rotate(-90deg);
}

.status-bg {
    fill: none;
    stroke: rgba(255, 255, 255, 0.1);
    stroke-width: 2;
}

.status-progress {
    fill: none;
    stroke: var(--primary);
    stroke-width: 2.5;
    stroke-linecap: round;
    transition: stroke-dasharray 0.5s ease;
}

.status-text {
    position: absolute;
    font-size: 0.7rem;
    font-weight: 600;
    color: var(--text-secondary);
    transition: color 0.3s ease;
}

.task-item:hover .status-text {
    color: var(--primary);
}

/* 任务标签样式 */
.task-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-sm);
    align-items: flex-start;
    margin-bottom: var(--spacing-md);
}

.task-tag {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-xs);
    padding: var(--spacing-xs) var(--spacing-sm);
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
    border: 1px solid rgba(255, 255, 255, 0.15);
    border-radius: var(--radius-lg);
    font-size: 0.8rem;
    color: var(--text-secondary);
    font-weight: 500;
    transition: all 0.3s ease;
    cursor: default;
    white-space: nowrap;
    max-width: 200px;
    overflow: hidden;
    text-overflow: ellipsis;
    flex-shrink: 0;
    -webkit-backdrop-filter: blur(8px);
    backdrop-filter: blur(8px);
}

.task-tag:hover {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.08) 100%);
    border-color: rgba(255, 255, 255, 0.25);
    color: var(--text-primary);
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    max-width: 300px;
    z-index: 10;
    position: relative;
    overflow: visible;
    text-overflow: clip;
}

.task-tag i {
    font-size: 0.625rem;
    color: var(--accent);
    transition: all var(--transition-normal);
    flex-shrink: 0;
}

.task-tag:hover i {
    color: var(--primary);
    transform: scale(1.1);
}

.task-tag.feature-tag {
    background: rgba(59, 130, 246, 0.1);
    border-color: rgba(59, 130, 246, 0.2);
    color: rgba(59, 130, 246, 0.8);
}

.task-tag.feature-tag:hover {
    background: rgba(59, 130, 246, 0.15);
    border-color: rgba(59, 130, 246, 0.3);
    color: rgba(59, 130, 246, 1);
}

.task-tag.card-tag {
    background: rgba(16, 185, 129, 0.1);
    border-color: rgba(16, 185, 129, 0.2);
    color: rgba(16, 185, 129, 0.8);
}

.task-tag.card-tag:hover {
    background: rgba(16, 185, 129, 0.15);
    border-color: rgba(16, 185, 129, 0.3);
    color: rgba(16, 185, 129, 1);
}



/* 移除冗余的进度显示样式 - 由新的圆形进度指示器替代 */

/* 任务描述 */
.task-description {
    color: var(--text-secondary);
    font-size: 0.95rem;
    line-height: 1.6;
    margin-bottom: var(--spacing-lg);
    text-align: left;
    position: relative;
}

.description-content {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    transition: all var(--transition-normal);
}

.description-content.expanded {
    display: block;
    -webkit-line-clamp: unset;
    overflow: visible;
}

.description-toggle-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: var(--spacing-sm) 0;
    gap: var(--spacing-xs);
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: var(--radius-lg);
    padding: var(--spacing-sm) var(--spacing-md);
    color: var(--text-secondary);
    font-size: 0.85rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0.8;
    position: relative;
    overflow: hidden;
    -webkit-backdrop-filter: blur(12px);
    backdrop-filter: blur(12px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}

.description-toggle-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transition: left var(--transition-normal);
}

.description-toggle-btn:hover {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.12) 0%, rgba(255, 255, 255, 0.06) 100%);
    border-color: var(--border-secondary);
    opacity: 1;
    transform: translateY(-1px);
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
}

.description-toggle-btn:hover::before {
    left: 100%;
}

.description-toggle-btn.expanded {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
    border-color: var(--primary);
    color: var(--text-primary);
}

.description-toggle-btn:active {
    transform: translateY(0);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.description-toggle-btn i {
    font-size: var(--font-size-xs);
    transition: transform var(--transition-normal);
    color: var(--text-secondary);
}

.description-toggle-btn:hover i {
    color: var(--text-primary);
}

.description-toggle-btn.expanded i {
    transform: rotate(180deg);
    color: var(--primary);
}

.description-toggle-btn span {
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
    letter-spacing: 0.5px;
}

/* 任务输入输出 */
.task-input-output {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
    margin-top: var(--spacing-sm);
    padding-top: var(--spacing-sm);
    border-top: 1px solid var(--border-secondary);
}

.task-input, .task-output {
    background: rgba(255, 255, 255, 0.03);
    padding: var(--spacing-sm);
    border-radius: var(--radius-md);
    border: 1px solid var(--border-glass);
    transition: all var(--transition-normal);
    position: relative;
    overflow: visible;
}

.task-input, .task-output {
    display: block;
}

.task-input::before, .task-output::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, 
        transparent 0%, 
        rgba(255, 255, 255, 0.2) 50%, 
        transparent 100%);
    opacity: 0;
    transition: opacity var(--transition-normal);
}

.task-input:hover::before {
    opacity: 1;
    background: linear-gradient(90deg, 
        transparent 0%, 
        var(--info) 50%, 
        transparent 100%);
}

.task-output:hover::before {
    opacity: 1;
    background: linear-gradient(90deg, 
        transparent 0%, 
        var(--success) 50%, 
        transparent 100%);
}

.task-input:hover, .task-output:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: var(--border-secondary);
    transform: translateY(-1px);
}

.task-input h5, .task-output h5 {
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--text-secondary);
    margin: 0;
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    padding: var(--spacing-xs) var(--spacing-sm);
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius-sm);
    border: 1px solid var(--border-glass);
    transition: all var(--transition-normal);
    min-width: 80px;
    flex-shrink: 0;
    margin-top: 2px;
}

.task-input h5:hover, .task-output h5:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: var(--border-secondary);
}

.task-input h5 i {
    color: var(--info);
    font-size: var(--font-size-sm);
}

.task-output h5 i {
    color: var(--success);
    font-size: var(--font-size-sm);
}

.task-input p, .task-output p {
    font-size: var(--font-size-sm);
    color: var(--text-primary);
    line-height: 1.4;
    margin: 0;
    padding: var(--spacing-xs);
    background: rgba(255, 255, 255, 0.03);
    border-radius: var(--radius-sm);
    border: 1px solid var(--border-glass);
    transition: all var(--transition-normal);
    overflow: visible;
    word-wrap: break-word;
    white-space: normal;
}

.task-input p, .task-output p {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-xs);
    min-height: 32px;
}

.task-input p i {
    color: var(--info);
    font-size: var(--font-size-sm);
    margin-top: 1px;
    flex-shrink: 0;
}

.task-output p i {
    color: var(--success);
    font-size: var(--font-size-sm);
    margin-top: 1px;
    flex-shrink: 0;
}

.task-input p:hover, .task-output p:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: var(--border-secondary);
}

/* 步骤进度预览区域 */
.task-steps-preview {
    margin-top: var(--spacing-sm);
    padding-top: var(--spacing-md);
    border-top: 1px solid var(--border-secondary);
}

.task-steps-preview:hover {
    background: rgba(255, 255, 255, 0.03);
    border-radius: var(--radius-md);
    padding: var(--spacing-sm);
    margin: var(--spacing-sm) calc(-1 * var(--spacing-sm)) 0;
}

/* 步骤预览头部 */
.steps-preview-header {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    margin-bottom: var(--spacing-sm);
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
    font-weight: 500;
    position: relative;
}

.steps-preview-header i {
    color: var(--primary-color);
    font-size: var(--font-size-xs);
}

.steps-preview-title {
    flex: 1;
    font-weight: 600;
}

.steps-preview-count {
    background: var(--primary-color);
    color: var(--text-on-primary);
    padding: 2px 8px;
    border-radius: var(--radius-sm);
    font-size: var(--font-size-xs);
    font-weight: 600;
    min-width: 40px;
    text-align: center;
}

/* 步骤展开/折叠按钮 */
.steps-toggle-btn {
    background: none;
    border: none;
    color: var(--text-secondary);
    cursor: pointer;
    padding: var(--spacing-xs);
    border-radius: var(--radius-sm);
    transition: all var(--transition-normal);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--font-size-xs);
}

.steps-toggle-btn:hover {
    background: rgba(255, 255, 255, 0.1);
    color: var(--text-primary);
    transform: scale(1.1);
}

.steps-toggle-btn.expanded {
    color: var(--primary-color);
}

.steps-toggle-btn i {
    font-size: 10px;
    transition: transform var(--transition-normal);
}

.steps-toggle-btn:hover i {
    transform: scale(1.2);
}

/* 步骤预览列表 */
.steps-preview-list {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
    transition: all var(--transition-normal);
    max-height: none;
    overflow-y: visible;
    padding-right: 0;
}

/* 步骤展开动画 */
.step-preview-item {
    animation: stepItemSlideIn 0.3s ease-out;
}

@keyframes stepItemSlideIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.step-preview-item {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-xs);
    padding: var(--spacing-xs);
    border-radius: var(--radius-sm);
    transition: all var(--transition-normal);
    cursor: pointer;
    min-height: 32px;
}

.step-preview-item:hover {
    background: rgba(255, 255, 255, 0.05);
    transform: translateX(2px);
}

.step-preview-item:hover .step-preview-text {
    color: var(--text-primary);
}

.step-preview-item.completed {
    opacity: 0.7;
}

.step-preview-item.completed .step-preview-text {
    text-decoration: line-through;
    color: var(--text-secondary);
    opacity: 0.7;
}

.step-preview-item.completed .step-preview-number {
    background: var(--success);
    color: var(--text-on-success);
    animation: stepCompleted 0.3s ease-out;
}

@keyframes stepCompleted {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.2);
        background: var(--success-hover);
    }
    100% {
        transform: scale(1);
    }
}

/* 步骤展开状态指示 */
.steps-preview-header.expanded .steps-preview-title {
    color: var(--primary-color);
}

.steps-preview-header.expanded .steps-preview-count {
    background: var(--success);
}

/* 步骤预览复选框 */
.step-preview-checkbox {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 18px;
    height: 18px;
    border-radius: var(--radius-sm);
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid var(--border-glass);
    transition: all 0.3s ease;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    overflow: hidden;
    flex-shrink: 0;
    margin-top: 2px;
    padding: 0;
}

.step-preview-checkbox::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
    opacity: 0;
    transition: opacity var(--transition-normal);
    border-radius: inherit;
}

.step-preview-checkbox:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: var(--border-secondary);
    transform: scale(1.1);
}

.step-preview-checkbox:hover::before {
    opacity: 1;
}

.step-preview-checkbox:active {
    transform: scale(0.95);
}

.step-preview-item.completed .step-preview-checkbox {
    background: var(--success);
    border-color: var(--success);
    color: var(--text-on-success);
}

.step-preview-item.completed .step-preview-checkbox:hover {
    background: var(--success-hover);
    transform: scale(1.1);
}

.step-preview-checkbox i {
    font-size: 8px;
    color: inherit;
    transition: all var(--transition-normal);
    transform: scale(0.8);
}

.step-preview-checkbox:hover i {
    transform: scale(1);
}

.step-preview-item.completed .step-preview-checkbox i {
    transform: scale(1);
    animation: checkmarkAppear 0.3s ease-out;
}

@keyframes checkmarkAppear {
    0% {
        transform: scale(0.5);
        opacity: 0;
    }
    50% {
        transform: scale(1.2);
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

.step-preview-item:not(.completed) .step-preview-checkbox i {
    color: var(--text-tertiary);
}

.step-preview-checkbox:focus {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}

.step-preview-checkbox:focus-visible {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}

/* 步骤预览编号 */
.step-preview-number {
    font-size: var(--font-size-xs);
    font-weight: 600;
    color: var(--text-secondary);
    min-width: 20px;
    text-align: center;
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius-sm);
    padding: 2px 6px;
    flex-shrink: 0;
    margin-top: 2px;
}

.step-preview-item.completed .step-preview-number {
    background: var(--success);
    color: var(--text-on-success);
}

/* 步骤预览文本 */
.step-preview-text {
    flex: 1;
    font-size: var(--font-size-sm);
    color: var(--text-primary);
    line-height: 1.4;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: normal;
    word-wrap: break-word;
    max-width: 300px;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
}

/* 更多步骤提示 */
.step-preview-more {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    padding: var(--spacing-xs);
    color: var(--text-tertiary);
    font-size: var(--font-size-xs);
    font-style: italic;
    border-top: 1px solid var(--border-glass);
    margin-top: var(--spacing-xs);
    padding-top: var(--spacing-sm);
}

.step-preview-more i {
    font-size: 10px;
}

/* 展开全部按钮 */
.expand-steps-btn {
    background: var(--primary-color);
    color: var(--text-on-primary);
    border: none;
    padding: 2px 8px;
    border-radius: var(--radius-sm);
    font-size: var(--font-size-xs);
    font-weight: 600;
    cursor: pointer;
    transition: all var(--transition-normal);
    margin-left: var(--spacing-xs);
}

.expand-steps-btn:hover {
    background: var(--primary-hover);
    transform: translateY(-1px);
    box-shadow: var(--shadow-sm);
}

.expand-steps-btn:active {
    transform: translateY(0);
}

/* 点击动画 */
@keyframes clickEffect {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.98);
    }
}

/* 任务模块特定动画 */
@keyframes taskListFadeIn {
    from {
        opacity: 0;
        transform: translateY(30px) scale(0.95);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

@keyframes taskItemSlideIn {
    from {
        opacity: 0;
        transform: translateY(20px) scale(0.9);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

@keyframes taskLoadingStateFadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 0.9;
        transform: translateY(0);
    }
}

@keyframes taskErrorStateFadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 0.9;
        transform: translateY(0);
    }
}

@keyframes taskEmptyStateFadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 0.9;
        transform: translateY(0);
    }
}

@keyframes taskEmptyIconFloat {
    0%, 100% {
        transform: translateY(0) rotate(0deg);
    }
    50% {
        transform: translateY(-6px) rotate(2deg);
    }
}

@keyframes taskLoadingSpin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* 任务项目延迟动画 */
.task-item:nth-child(1) { animation-delay: 0.1s; }
.task-item:nth-child(2) { animation-delay: 0.2s; }
.task-item:nth-child(3) { animation-delay: 0.3s; }
.task-item:nth-child(4) { animation-delay: 0.4s; }
.task-item:nth-child(5) { animation-delay: 0.5s; }
.task-item:nth-child(6) { animation-delay: 0.6s; }
.task-item:nth-child(7) { animation-delay: 0.7s; }
.task-item:nth-child(8) { animation-delay: 0.8s; }
.task-item:nth-child(9) { animation-delay: 0.9s; }
.task-item:nth-child(10) { animation-delay: 1s; }

/* 长按删除相关样式 */
.task-item.long-pressing {
    transform: scale(0.98);
    box-shadow: 0 8px 32px rgba(239, 68, 68, 0.3);
    border-color: var(--error);
    background: linear-gradient(135deg, 
        rgba(239, 68, 68, 0.15) 0%, 
        rgba(239, 68, 68, 0.08) 100%);
    position: relative;
    z-index: 10;
    animation: longPressPulse 0.6s ease-in-out infinite;
}

.task-item.long-pressing::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, 
        var(--error) 0%, 
        var(--error) 50%, 
        var(--error) 100%);
    transform: scaleX(1);
    animation: longPressPulse 0.8s ease-in-out infinite;
}

.task-item.deleting {
    transform: scale(0.9);
    opacity: 0.7;
    box-shadow: var(--shadow-lg);
    border-color: var(--error);
    background: linear-gradient(135deg, 
        rgba(239, 68, 68, 0.15) 0%, 
        rgba(239, 68, 68, 0.08) 100%);
    animation: deleteAnimation 0.6s ease-in-out;
}

.task-grid.reflowing {
    transition: all 0.3s ease-in-out;
}

/* 长按删除动画 */
@keyframes longPressPulse {
    0%, 100% {
        transform: scale(0.98);
        box-shadow: 0 8px 32px rgba(239, 68, 68, 0.3);
    }
    50% {
        transform: scale(0.96);
        box-shadow: 0 12px 48px rgba(239, 68, 68, 0.4);
    }
}

@keyframes longPressTextFadeIn {
    from {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.8);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
}

@keyframes deleteAnimation {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(0.8);
        opacity: 0.5;
    }
    100% {
        transform: scale(0.6);
        opacity: 0;
    }
}

/* 响应式设计 */
@media (max-width: 768px) {
    .task-grid {
        grid-template-columns: 1fr;
        gap: var(--spacing-lg);
        width: 100%;
        padding: var(--spacing-xs);
    }
    
    .task-item {
        padding: var(--spacing-lg);
        width: 100%;
        border-radius: var(--radius-lg);
    }
    
    .task-title {
        font-size: 1.2rem;
    }
    
    .status-ring {
        width: 36px;
        height: 36px;
    }
    
    .status-text {
        font-size: 0.65rem;
    }
    
    .task-header {
        margin-bottom: var(--spacing-sm);
    }
    
    .task-header-content {
        gap: var(--spacing-xs);
    }
    
    .task-tags {
        gap: var(--spacing-xs);
        flex-wrap: wrap;
        align-items: flex-start;
    }
    
    .task-tag {
        font-size: 0.7rem;
        padding: 1px var(--spacing-xs);
        max-width: 150px;
        flex-shrink: 0;
    }
    

    
    .task-title {
        font-size: 1rem;
        -webkit-line-clamp: 2; /* 在小屏幕上显示两行 */
        padding-bottom: var(--spacing-sm);
    }
    

    

    
    .task-input-output {
        gap: var(--spacing-xs);
    }
    
    .task-input, .task-output {
        flex-direction: column;
        align-items: flex-start;
        gap: var(--spacing-xs);
        padding: var(--spacing-xs);
    }
    
    .task-input h5, .task-output h5 {
        min-width: auto;
        width: 100%;
        justify-content: center;
    }
    
    .task-input p, .task-output p {
        white-space: normal;
        text-overflow: initial;
        overflow: visible;
        word-wrap: break-word;
        padding: var(--spacing-xs);
    }
    
    .task-input p, .task-output p {
        flex-direction: column;
        align-items: flex-start;
        gap: var(--spacing-xs);
    }
    
    .task-input p i, .task-output p i {
        margin-top: 0;
    }
    
    .task-steps-preview {
        margin-top: var(--spacing-xs);
        padding-top: var(--spacing-sm);
    }
    
    .steps-preview-header {
        gap: var(--spacing-xs);
        font-size: var(--font-size-xs);
    }
    
    .step-preview-text {
        max-width: 150px;
        font-size: var(--font-size-xs);
        white-space: normal;
        word-wrap: break-word;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }
    
    .step-preview-number {
        min-width: 16px;
        padding: 1px 4px;
        font-size: 10px;
    }
    
    .steps-toggle-btn {
        padding: 2px;
        font-size: 8px;
    }
    
    .expand-steps-btn {
        padding: 1px 6px;
        font-size: 10px;
    }
    
    .step-preview-checkbox {
        width: 18px;
        height: 18px;
        min-width: 18px;
    }
    
    .step-preview-checkbox i {
        font-size: 10px;
    }

    .steps-preview-list {
        max-height: none;
        gap: var(--spacing-xs);
    }
}

@media (max-width: 480px) {
    .task-grid {
        padding: 0;
    }
    
    .task-item {
        padding: var(--spacing-md);
        border-radius: var(--radius-md);
    }
    
    .task-title {
        font-size: 1.1rem;
        flex-direction: column;
        align-items: flex-start;
        gap: var(--spacing-sm);
    }
    
    .task-status-indicator {
        align-self: flex-end;
    }
    
    .status-ring {
        width: 32px;
        height: 32px;
    }
    
    .status-text {
        font-size: 0.6rem;
    }
    
    .task-tags {
        flex-direction: row;
        gap: var(--spacing-xs);
        flex-wrap: wrap;
    }
    
    .task-tag {
        max-width: 140px;
        font-size: 0.7rem;
        padding: var(--spacing-xs);
    }
    

    
    .task-input-output {
        gap: var(--spacing-xs);
    }
    
    .task-input, .task-output {
        padding: var(--spacing-xs);
        gap: var(--spacing-xs);
    }
    
    .task-input h5, .task-output h5 {
        font-size: var(--font-size-xs);
        padding: var(--spacing-xs);
    }
    
    .task-input p, .task-output p {
        font-size: var(--font-size-xs);
        padding: var(--spacing-xs);
    }
    
    .task-input p i, .task-output p i {
        font-size: var(--font-size-xs);
    }
    
    .task-description {
        margin-bottom: var(--spacing-sm);
    }
    
    .description-toggle-btn {
        padding: var(--spacing-xs);
        font-size: 10px;
        margin-top: var(--spacing-xs);
    }
    
    .description-toggle-btn span {
        display: none;
    }
    
    .description-toggle-btn i {
        font-size: 10px;
    }
    

    
    .task-steps-preview {
        margin-top: var(--spacing-xs);
        padding-top: var(--spacing-sm);
    }
    
    .steps-preview-header {
        flex-direction: column;
        align-items: flex-start;
        gap: var(--spacing-xs);
    }
    
    .step-preview-text {
        max-width: 120px;
        font-size: 10px;
        white-space: normal;
        word-wrap: break-word;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }
    
    .step-preview-item {
        padding: var(--spacing-xs);
        gap: var(--spacing-xs);
    }
    
    .steps-toggle-btn {
        padding: 1px;
        font-size: 8px;
    }
    
    .expand-steps-btn {
        padding: 1px 4px;
        font-size: 9px;
    }
    
    .step-preview-checkbox {
        width: 20px;
        height: 20px;
        min-width: 20px;
    }
    
    .step-preview-checkbox i {
        font-size: 11px;
    }
}

@media (max-width: 1200px) {
    .task-grid {
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    }
}

/* 暗色模式适配 */
@media (prefers-color-scheme: dark) {
    .task-list-container {
        background: linear-gradient(135deg, 
            rgba(30, 41, 59, 0.8) 0%, 
            rgba(15, 23, 42, 0.6) 100%);
        border-color: var(--border-glass);
    }
    
    .task-item {
        background: var(--bg-elevated);
        border-color: var(--border-glass);
    }
    
    .task-item:hover {
        background: var(--bg-secondary);
        border-color: var(--border-secondary);
    }
}

/* 减少动画选项 */
@media (prefers-reduced-motion: reduce) {
    body .task-list-container,
    body .task-item {
        animation: none;
    }
    
    body .task-item:hover {
        transform: none;
    }
}

/* 高对比度模式 */
@media (prefers-contrast: high) {
    .task-list-container {
        border: 2px solid var(--border-primary);
        background: var(--bg-elevated);
    }
    
    .task-item {
        border: 2px solid var(--border-primary);
        background: var(--bg-secondary);
    }
    
    .task-item:focus-visible {
        outline: 3px solid var(--primary);
        outline-offset: 3px;
    }
    

} 







