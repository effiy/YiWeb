/* 任务列表组件样式 */

/* 任务网格布局 */
.task-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: var(--spacing-lg);
    margin-bottom: var(--spacing-2xl);
    width: 100%;
}

/* 任务列表主容器 */
.task-list-container {
    margin-top: var(--spacing-md);
    margin-bottom: var(--spacing-xl);
    background: var(--bg-elevated);
    border: 1px solid var(--border-glass);
    border-radius: var(--radius-lg);
    -webkit-backdrop-filter: blur(20px);
    backdrop-filter: blur(20px);
    box-shadow: var(--shadow-md);
    overflow: hidden;
    transition: all var(--transition-normal);
    position: relative;
    animation: taskListFadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.task-list-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: var(--primary-gradient);
    opacity: 0.6;
}

.task-list-container:hover {
    box-shadow: var(--shadow-lg);
    border-color: var(--border-secondary);
    transform: translateY(-2px);
}

/* 任务列表内容区域 */
.task-list-content {
    padding: var(--spacing-lg);
    flex: 1;
    overflow-y: auto;
    background: linear-gradient(180deg, 
        rgba(255, 255, 255, 0.03) 0%, 
        transparent 30%,
        rgba(255, 255, 255, 0.01) 100%);
    scroll-behavior: smooth;
    scrollbar-width: thin;
    scrollbar-color: rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.05);
}

.task-list-content::-webkit-scrollbar {
    width: 6px;
}

.task-list-content::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius-full);
    margin: 4px 0;
}

.task-list-content::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, 
        rgba(255, 255, 255, 0.3) 0%, 
        rgba(255, 255, 255, 0.2) 100%);
    border-radius: var(--radius-full);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.task-list-content::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(180deg, 
        rgba(255, 255, 255, 0.4) 0%, 
        rgba(255, 255, 255, 0.3) 100%);
}

/* 任务加载状态 */
.task-loading-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-lg);
    padding: var(--spacing-2xl);
    text-align: center;
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
    opacity: 0.9;
    position: relative;
    transition: all var(--transition-normal);
    animation: taskLoadingStateFadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    min-height: 200px;
    justify-content: center;
}

.task-loading-state i {
    font-size: var(--font-size-2xl);
    color: var(--primary);
    transition: all var(--transition-normal);
    animation: taskLoadingSpin 1.2s linear infinite;
    position: relative;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

.task-loading-state span {
    transition: color var(--transition-normal);
    font-weight: var(--font-weight-medium);
}

/* 任务错误状态 */
.task-error-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-lg);
    padding: var(--spacing-2xl);
    text-align: center;
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
    opacity: 0.9;
    position: relative;
    transition: all var(--transition-normal);
    animation: taskErrorStateFadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    min-height: 200px;
    justify-content: center;
}

.task-error-state i {
    font-size: var(--font-size-2xl);
    color: var(--error);
    transition: all var(--transition-normal);
    position: relative;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

.task-error-state span {
    transition: color var(--transition-normal);
    font-weight: var(--font-weight-medium);
}

.task-error-state p {
    color: var(--text-muted);
    font-size: var(--font-size-xs);
    margin: 0;
    max-width: 300px;
    line-height: 1.5;
}

.task-retry-btn {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-sm);
    padding: var(--spacing-sm) var(--spacing-md);
    background: var(--primary-gradient);
    color: white;
    border: none;
    border-radius: var(--radius-md);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    cursor: pointer;
    transition: all var(--transition-normal);
    box-shadow: var(--shadow-sm);
    position: relative;
    overflow: hidden;
}

.task-retry-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
        transparent 0%, 
        rgba(255, 255, 255, 0.2) 50%, 
        transparent 100%);
    transition: left 0.6s ease;
}

.task-retry-btn:hover {
    background: var(--primary-hover-gradient);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

.task-retry-btn:hover::before {
    left: 100%;
}

.task-retry-btn:active {
    transform: translateY(0);
}

/* 任务空状态 */
.task-empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-lg);
    padding: var(--spacing-2xl);
    text-align: center;
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
    opacity: 0.9;
    position: relative;
    transition: all var(--transition-normal);
    animation: taskEmptyStateFadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    min-height: 200px;
    justify-content: center;
}

.task-empty-state::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, 
        rgba(255, 255, 255, 0.03) 0%, 
        transparent 30%, 
        rgba(255, 255, 255, 0.02) 70%,
        transparent 100%);
    opacity: 0;
    transition: opacity var(--transition-normal);
    pointer-events: none;
    border-radius: inherit;
}

.task-empty-state:hover {
    opacity: 1;
    color: var(--text-muted);
}

.task-empty-state:hover::before {
    opacity: 1;
}

.task-empty-state i {
    font-size: var(--font-size-2xl);
    color: var(--text-secondary);
    transition: all var(--transition-normal);
    animation: taskEmptyIconFloat 4s ease-in-out infinite;
    position: relative;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
}

.task-empty-state:hover i {
    color: var(--text-accent);
    transform: scale(1.1) rotate(5deg);
}

.task-empty-state span {
    transition: color var(--transition-normal);
    font-weight: var(--font-weight-medium);
}

.task-empty-state:hover span {
    color: var(--text-muted);
}

/* 任务列表 */
.task-list {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    padding: var(--spacing-sm);
    border-radius: var(--radius-lg);
    background: rgba(255, 255, 255, 0.02);
    min-height: 100px;
}

/* 任务卡片 */
.task-item {
    background: var(--bg-elevated);
    border: 1px solid var(--border-glass);
    border-radius: var(--radius-lg);
    padding: var(--spacing-lg);
    cursor: pointer;
    transition: var(--transition-normal);
    position: relative;
    overflow: hidden;
    animation: taskItemSlideIn 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: var(--shadow-sm);
}

.task-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: var(--primary-gradient);
    transform: scaleX(0);
    transition: var(--transition-normal);
}

.task-item:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg);
}

.task-item:hover::before {
    transform: scaleX(1);
}

.task-item.clicked {
    animation: clickEffect 0.3s ease;
}

.task-item.active {
    border-color: var(--border-focus);
    box-shadow: var(--shadow-glow);
}

/* 选中状态的任务卡片 */
.task-item.selected {
    border-color: var(--primary);
    background: var(--bg-highlight);
    box-shadow: var(--shadow-glow);
    position: relative;
}

.task-item.selected::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, 
        var(--primary) 0%, 
        var(--primary-hover) 50%, 
        var(--primary) 100%);
    border-radius: var(--radius-md) var(--radius-md) 0 0;
}

.task-item.selected:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
}

/* 任务头部信息 */
.task-header {
    margin-bottom: var(--spacing-md);
}

.task-header-content {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
}

.task-header-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-shrink: 0;
    width: 100%;
}

.task-meta-row {
    display: flex;
    align-items: center;
    gap: var(--spacing-md);
    flex-shrink: 0;
    background: rgba(255, 255, 255, 0.03);
    padding: var(--spacing-sm) var(--spacing-md);
    border-radius: var(--radius-sm);
    border: 1px solid rgba(255, 255, 255, 0.05);
    transition: all var(--transition-normal);
    width: 100%;
}

.task-meta-row:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: rgba(255, 255, 255, 0.1);
    transform: translateY(-1px);
    box-shadow: var(--shadow-sm);
}

.task-title {
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--text-primary);
    line-height: 1.4;
    margin: 0;
    width: 100%;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    transition: color var(--transition-normal);
    padding-bottom: var(--spacing-xs);
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

.task-title:hover {
    color: var(--primary);
}

.task-time {
    display: flex;
    align-items: center;
    gap: 4px;
    color: var(--text-secondary);
    font-size: 0.875rem;
    flex-shrink: 0; /* 防止时间被压缩 */
    white-space: nowrap; /* 防止时间换行 */
    transition: color var(--transition-normal);
    width: 20%;
    justify-content: flex-end;
    padding-left: var(--spacing-sm);
    min-width: 80px;
}

.task-time:hover {
    color: var(--text-primary);
}

.task-time i {
    font-size: 0.75rem;
    color: var(--accent);
    transition: all var(--transition-normal);
}

.task-time:hover i {
    color: var(--primary);
    transform: scale(1.1);
}

/* 任务进度显示 */
.task-progress {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    padding: var(--spacing-xs) var(--spacing-sm);
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius-sm);
    transition: all var(--transition-normal);
    min-width: 80px;
    flex-shrink: 0;
    flex: 1;
    max-width: 80%;
    margin-right: var(--spacing-sm);
}

.task-progress:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.2);
    transform: translateY(-1px);
    box-shadow: var(--shadow-sm);
}

.task-progress i {
    color: var(--accent);
    font-size: 12px;
    transition: all var(--transition-normal);
    flex-shrink: 0;
}

.task-progress:hover i {
    color: var(--primary);
    transform: scale(1.1);
}

.progress-text {
    font-size: 12px;
    color: var(--text-secondary);
    font-weight: var(--font-weight-medium);
    transition: color var(--transition-normal);
    white-space: nowrap;
    flex-shrink: 0;
    min-width: 30px;
}

.task-progress:hover .progress-text {
    color: var(--text-primary);
}

.progress-bar {
    width: 60px;
    height: 4px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: var(--radius-full);
    overflow: hidden;
    position: relative;
    transition: all var(--transition-normal);
    flex: 1;
    max-width: 120px;
    min-width: 40px;
}

.task-progress:hover .progress-bar {
    background: rgba(255, 255, 255, 0.2);
}

.progress-fill {
    height: 100%;
    background: linear-gradient(90deg, var(--success) 0%, var(--primary) 100%);
    border-radius: var(--radius-full);
    transition: width var(--transition-normal);
    position: relative;
    overflow: hidden;
}

.progress-fill::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
        transparent 0%, 
        rgba(255, 255, 255, 0.3) 50%, 
        transparent 100%);
    animation: progressShine 2s ease-in-out infinite;
}

@keyframes progressShine {
    0% {
        left: -100%;
    }
    50% {
        left: 100%;
    }
    100% {
        left: 100%;
    }
}

/* 任务描述 */
.task-description {
    color: var(--text-secondary);
    font-size: 0.9rem;
    line-height: 1.5;
    margin-bottom: var(--spacing-md);
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-align: left;
}

/* 任务输入输出 */
.task-input-output {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    margin-top: var(--spacing-sm);
    padding-top: var(--spacing-md);
    border-top: 1px solid var(--border-secondary);
}

.task-input, .task-output {
    background: rgba(255, 255, 255, 0.03);
    padding: var(--spacing-md);
    border-radius: var(--radius-md);
    border: 1px solid var(--border-glass);
    transition: all var(--transition-normal);
    position: relative;
    overflow: hidden;
}

.task-input::before, .task-output::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, 
        transparent 0%, 
        rgba(255, 255, 255, 0.2) 50%, 
        transparent 100%);
    opacity: 0;
    transition: opacity var(--transition-normal);
}

.task-input:hover::before {
    opacity: 1;
    background: linear-gradient(90deg, 
        transparent 0%, 
        var(--info) 50%, 
        transparent 100%);
}

.task-output:hover::before {
    opacity: 1;
    background: linear-gradient(90deg, 
        transparent 0%, 
        var(--success) 50%, 
        transparent 100%);
}

.task-input:hover, .task-output:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: var(--border-secondary);
    transform: translateY(-1px);
}

.task-input h5, .task-output h5 {
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--text-secondary);
    margin: 0 0 var(--spacing-sm) 0;
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    padding: var(--spacing-xs) var(--spacing-sm);
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius-sm);
    border: 1px solid var(--border-glass);
    transition: all var(--transition-normal);
}

.task-input h5:hover, .task-output h5:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: var(--border-secondary);
}

.task-input h5 i {
    color: var(--info);
    font-size: var(--font-size-sm);
}

.task-output h5 i {
    color: var(--success);
    font-size: var(--font-size-sm);
}

.task-input p, .task-output p {
    font-size: var(--font-size-sm);
    color: var(--text-primary);
    line-height: 1.5;
    margin: 0;
    padding: var(--spacing-xs);
    background: rgba(255, 255, 255, 0.03);
    border-radius: var(--radius-sm);
    border: 1px solid var(--border-glass);
    transition: all var(--transition-normal);
}

.task-input p:hover, .task-output p:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: var(--border-secondary);
}

/* 点击动画 */
@keyframes clickEffect {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.98);
    }
}

/* 任务模块特定动画 */
@keyframes taskListFadeIn {
    from {
        opacity: 0;
        transform: translateY(30px) scale(0.95);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

@keyframes taskItemSlideIn {
    from {
        opacity: 0;
        transform: translateY(20px) scale(0.9);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

@keyframes taskLoadingStateFadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 0.9;
        transform: translateY(0);
    }
}

@keyframes taskErrorStateFadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 0.9;
        transform: translateY(0);
    }
}

@keyframes taskEmptyStateFadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 0.9;
        transform: translateY(0);
    }
}

@keyframes taskEmptyIconFloat {
    0%, 100% {
        transform: translateY(0) rotate(0deg);
    }
    50% {
        transform: translateY(-6px) rotate(2deg);
    }
}

@keyframes taskLoadingSpin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* 任务项目延迟动画 */
.task-item:nth-child(1) { animation-delay: 0.1s; }
.task-item:nth-child(2) { animation-delay: 0.2s; }
.task-item:nth-child(3) { animation-delay: 0.3s; }
.task-item:nth-child(4) { animation-delay: 0.4s; }
.task-item:nth-child(5) { animation-delay: 0.5s; }
.task-item:nth-child(6) { animation-delay: 0.6s; }
.task-item:nth-child(7) { animation-delay: 0.7s; }
.task-item:nth-child(8) { animation-delay: 0.8s; }
.task-item:nth-child(9) { animation-delay: 0.9s; }
.task-item:nth-child(10) { animation-delay: 1s; }

/* 长按删除相关样式 */
.task-item.long-pressing {
    transform: scale(0.95);
    box-shadow: var(--shadow-lg);
    border-color: var(--error);
    background: linear-gradient(135deg, 
        rgba(239, 68, 68, 0.1) 0%, 
        rgba(239, 68, 68, 0.05) 100%);
    position: relative;
    z-index: 10;
}

.task-item.long-pressing::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, 
        var(--error) 0%, 
        #ef4444 50%, 
        var(--error) 100%);
    transform: scaleX(1);
    animation: longPressPulse 0.8s ease-in-out infinite;
}

.task-item.long-pressing::after {
    content: '长按删除';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(239, 68, 68, 0.9);
    color: white;
    padding: var(--spacing-sm) var(--spacing-md);
    border-radius: var(--radius-md);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    z-index: 20;
    pointer-events: none;
    animation: longPressTextFadeIn 0.3s ease-out;
}

.task-item.deleting {
    transform: scale(0.9);
    opacity: 0.7;
    box-shadow: var(--shadow-lg);
    border-color: var(--error);
    background: linear-gradient(135deg, 
        rgba(239, 68, 68, 0.15) 0%, 
        rgba(239, 68, 68, 0.08) 100%);
    animation: deleteAnimation 0.6s ease-in-out;
}

.task-grid.reflowing {
    transition: all 0.3s ease-in-out;
}

/* 长按删除动画 */
@keyframes longPressPulse {
    0%, 100% {
        opacity: 1;
        transform: scaleX(1);
    }
    50% {
        opacity: 0.7;
        transform: scaleX(0.95);
    }
}

@keyframes longPressTextFadeIn {
    from {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.8);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
}

@keyframes deleteAnimation {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(0.8);
        opacity: 0.5;
    }
    100% {
        transform: scale(0.6);
        opacity: 0;
    }
}

/* 响应式设计 */
@media (max-width: 768px) {
    .task-grid {
        grid-template-columns: 1fr;
        gap: var(--spacing-md);
        width: 100%;
    }
    
    .task-item {
        padding: var(--spacing-md);
        width: 100%;
    }
    
    .task-header {
        margin-bottom: var(--spacing-sm);
    }
    
    .task-header-content {
        gap: var(--spacing-xs);
    }
    
    .task-meta-row {
        gap: var(--spacing-sm);
        flex-wrap: wrap;
        justify-content: space-between;
    }
    
    .task-title {
        font-size: 1rem;
        -webkit-line-clamp: 2; /* 在小屏幕上显示两行 */
    }
    
    .task-time {
        font-size: 0.8rem;
        width: 25%;
        min-width: 60px;
    }
    
    .task-progress {
        min-width: 60px;
        padding: var(--spacing-xs);
        max-width: 70%;
        flex: 1;
    }
    
    .progress-bar {
        width: 40px;
        max-width: 60px;
    }
    
    .progress-text {
        font-size: 11px;
    }
    
    .task-input-output {
        gap: var(--spacing-sm);
    }
}

@media (max-width: 480px) {
    .task-meta-row {
        flex-direction: column;
        align-items: stretch;
        gap: var(--spacing-xs);
    }
    
    .task-progress {
        max-width: 100%;
        order: 1;
    }
    
    .task-time {
        width: 100%;
        justify-content: center;
        order: 2;
    }
}

@media (max-width: 1200px) {
    .task-grid {
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    }
}

/* 暗色模式适配 */
@media (prefers-color-scheme: dark) {
    .task-list-container {
        background: linear-gradient(135deg, 
            rgba(30, 41, 59, 0.8) 0%, 
            rgba(15, 23, 42, 0.6) 100%);
        border-color: var(--border-glass);
    }
    
    .task-item {
        background: var(--bg-elevated);
        border-color: var(--border-glass);
    }
    
    .task-item:hover {
        background: var(--bg-secondary);
        border-color: var(--border-secondary);
    }
}

/* 减少动画选项 */
@media (prefers-reduced-motion: reduce) {
    body .task-list-container,
    body .task-item {
        animation: none;
    }
    
    body .task-item:hover {
        transform: none;
    }
}

/* 高对比度模式 */
@media (prefers-contrast: high) {
    .task-list-container {
        border: 2px solid var(--border-primary);
        background: var(--bg-elevated);
    }
    
    .task-item {
        border: 2px solid var(--border-primary);
        background: var(--bg-secondary);
    }
    
    .task-item:focus-visible {
        outline: 3px solid var(--primary);
        outline-offset: 3px;
    }
    
    .task-time {
        border: 2px solid var(--border-primary);
    }
} 
